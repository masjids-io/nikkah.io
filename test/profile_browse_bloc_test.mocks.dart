// Mocks generated by Mockito 5.4.6 from annotations
// in nikkah_io/test/profile_browse_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nikkah_io/models/nikkah_profile.dart' as _i2;
import 'package:nikkah_io/repositories/profile_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeListNikkahProfilesResponse_0 extends _i1.SmartFake
    implements _i2.ListNikkahProfilesResponse {
  _FakeListNikkahProfilesResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNikkahProfile_1 extends _i1.SmartFake implements _i2.NikkahProfile {
  _FakeNikkahProfile_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i3.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ListNikkahProfilesResponse> listProfiles({
    int? start,
    int? limit,
    int? page,
    String? name,
    String? gender,
    String? country,
    String? city,
    String? state,
    String? zipCode,
    int? latitude,
    int? longitude,
    String? education,
    String? occupation,
    int? heightCm,
    String? sect,
    List<String>? hobbies,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listProfiles,
          [],
          {
            #start: start,
            #limit: limit,
            #page: page,
            #name: name,
            #gender: gender,
            #country: country,
            #city: city,
            #state: state,
            #zipCode: zipCode,
            #latitude: latitude,
            #longitude: longitude,
            #education: education,
            #occupation: occupation,
            #heightCm: heightCm,
            #sect: sect,
            #hobbies: hobbies,
          },
        ),
        returnValue: _i4.Future<_i2.ListNikkahProfilesResponse>.value(
            _FakeListNikkahProfilesResponse_0(
          this,
          Invocation.method(
            #listProfiles,
            [],
            {
              #start: start,
              #limit: limit,
              #page: page,
              #name: name,
              #gender: gender,
              #country: country,
              #city: city,
              #state: state,
              #zipCode: zipCode,
              #latitude: latitude,
              #longitude: longitude,
              #education: education,
              #occupation: occupation,
              #heightCm: heightCm,
              #sect: sect,
              #hobbies: hobbies,
            },
          ),
        )),
      ) as _i4.Future<_i2.ListNikkahProfilesResponse>);

  @override
  _i4.Future<_i2.NikkahProfile> getSelfProfile() => (super.noSuchMethod(
        Invocation.method(
          #getSelfProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.NikkahProfile>.value(_FakeNikkahProfile_1(
          this,
          Invocation.method(
            #getSelfProfile,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NikkahProfile>);

  @override
  _i4.Future<_i2.NikkahProfile> getProfile(String? profileId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [profileId],
        ),
        returnValue: _i4.Future<_i2.NikkahProfile>.value(_FakeNikkahProfile_1(
          this,
          Invocation.method(
            #getProfile,
            [profileId],
          ),
        )),
      ) as _i4.Future<_i2.NikkahProfile>);

  @override
  _i4.Future<void> likeProfile(
    String? likerProfileId,
    String? likedProfileId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #likeProfile,
          [
            likerProfileId,
            likedProfileId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.NikkahProfile> createProfile(
          Map<String, dynamic>? profileData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProfile,
          [profileData],
        ),
        returnValue: _i4.Future<_i2.NikkahProfile>.value(_FakeNikkahProfile_1(
          this,
          Invocation.method(
            #createProfile,
            [profileData],
          ),
        )),
      ) as _i4.Future<_i2.NikkahProfile>);

  @override
  _i4.Future<_i2.NikkahProfile> updateProfile(
    String? profileId,
    Map<String, dynamic>? profileData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [
            profileId,
            profileData,
          ],
        ),
        returnValue: _i4.Future<_i2.NikkahProfile>.value(_FakeNikkahProfile_1(
          this,
          Invocation.method(
            #updateProfile,
            [
              profileId,
              profileData,
            ],
          ),
        )),
      ) as _i4.Future<_i2.NikkahProfile>);
}
